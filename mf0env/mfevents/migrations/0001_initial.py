# Generated by Django 4.1.1 on 2022-10-11 17:19

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('music', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventCrew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=120, verbose_name='Event Crew')),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact name')),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact phone number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Contact email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='website')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
            ],
        ),
        migrations.CreateModel(
            name='EventEnquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone number')),
                ('message', models.CharField(max_length=300, verbose_name='Message')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Venue name')),
                ('location', models.CharField(blank=True, max_length=250, null=True, verbose_name='Venue location')),
                ('postcode', models.CharField(blank=True, max_length=10, null=True, verbose_name='Venue postcode')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Venue website')),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Venue contact')),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact phone number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Contact email')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Event name')),
                ('type', models.CharField(choices=[('Sound System', (('carnival_S', 'Carnival/Street Party'), ('club_S', 'Club '), ('club_S_sc', 'Club: Sound-Clash'), ('festival_S', 'Festival'))), ('DJ', (('radio', 'Radio show'), ('carnival_dj', 'Carnival/Street Party (DJ)'), ('club_dj', 'Club (DJ)'), ('club_dj_sc', 'Club (DJ): Sound-Clash'), ('festival_dj', 'Festival (DJ)'), ('pub_dj', 'Pub (DJ)'))), ('private', 'Private Event'), ('workshop', 'Workshop')], default='club_S', max_length=20, verbose_name='Type')),
                ('status', models.CharField(choices=[('Plan', 'Planning'), ('Scheduled', 'Scheduled'), ('Cancelled', 'Cancelled')], default='plan', max_length=20, verbose_name='Status')),
                ('start_dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Event (start) time & date')),
                ('finish_dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Event (finish) time & date')),
                ('finished', models.BooleanField(default=False, verbose_name='Event Finished')),
                ('soundclash', models.BooleanField(default=False, verbose_name='Sounclash')),
                ('Soundsystem_rank', models.CharField(blank=True, max_length=100, null=True, verbose_name='Sound rank dictionary')),
                ('selectas_rank', models.CharField(blank=True, max_length=300, null=True, verbose_name='Selectas rank dictionary')),
                ('vocals_rank', models.CharField(blank=True, max_length=300, null=True, verbose_name='Vocals rank dictionary')),
                ('instrumentals_rank', models.CharField(blank=True, max_length=300, null=True, verbose_name='Vocals rank dictionary')),
                ('event_info', models.TextField(blank=True, null=True, verbose_name='Information')),
                ('event_image', models.ImageField(blank=True, null=True, upload_to='event_images/', verbose_name='Event Image')),
                ('event_url', models.URLField(blank=True, null=True, verbose_name='Event website')),
                ('ticket_url', models.URLField(blank=True, null=True, verbose_name='Ticket website')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
                ('genre', models.ManyToManyField(related_name='event_genre', to='music.genre')),
                ('instrumentals', models.ManyToManyField(limit_choices_to={'artist_type__instrumentalist': True}, related_name='event_instrumentals', to='music.artist')),
                ('organiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mfevents.eventcrew')),
                ('selectas', models.ManyToManyField(limit_choices_to={'artist_type__selecta': True}, related_name='event_selectas', to='music.artist')),
                ('soundsystem', models.ManyToManyField(related_name='soundsystem', to='music.soundsystem')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mfevents.venue')),
                ('vocals', models.ManyToManyField(limit_choices_to={'artist_type__vocalist': True}, related_name='event_vocals', to='music.artist')),
            ],
        ),
    ]
